import {
    fixing_types,
    insulationTypes,
    compass_directions,
    age_ranges,
    module_variant,
    roof_types,
    roofing_types,
    shading_types,
    building_types,
} from '@/constants/datacenter'
import moment from 'moment'

const emobile_charging_capacity = [{ value: 1, label: 'nicht vorhanden' }, { value: 2, label: '3,7kW' }, { value: 3, label: '7,4 Kw' }, { value: 4, label: '11kW' }, { value: 5, label: 'E-Mobilität in den kommenden 3 Jahren geplant' }]


export const BUILDING_INFO = () => {
    return [
        { name: 'type_id', label: 'Gebäudetyp', type: 'select', options: building_types, pattern: '', width: "1", rules: { required: true } },
        { name: 'type_other', label: 'Gebäudetyp Sonstiges', type: 'text', pattern: '', width: "1", rules: { required: false } },
        { name: 'is_lead_owner', label: 'Ist Kontakt Eigentümer? ', type: 'checkbox', pattern: '', width: "1", rules: { required: false } },
        { name: 'is_leads_main_residence', label: 'Ist wohnhaft?', type: 'checkbox', pattern: '', width: "1", rules: { required: false } },
        { name: 'is_commercial', label: 'Gewerblich?', type: 'checkbox', width: "1", rules: { required: false } },
    ]
}

export const BUILDING_ADDRESS_INFO = () => {
    return [
        { name: 'street_name', label: 'Strassenname', type: 'text', pattern: '', width: "1", rules: { required: true } },
        { name: 'street_number', label: 'Hausnummer', type: 'text', pattern: '', width: "1", rules: { required: true } },
        { name: 'additional', label: 'Zusatz ', type: 'text', pattern: '', width: "1", rules: { required: false } },
        { name: 'postcode', label: 'PLZ', type: 'text', pattern: '', width: "1", rules: { required: false } },
        { name: 'city', label: 'Stadt', type: 'text', width: "1", rules: { required: false } },
        { name: 'country', label: 'Land', type: 'text', width: "1", rules: { required: false } },
    ]
}

export const ROOF_INFO = () => {
    return [
        { name: 'type_id', label: 'Dachtyp', type: 'select', options: roof_types, pattern: '', width: "1", rules: { required: true } },
        { name: 'type_other', label: 'Dachtyp Sonstiges', type: 'text', pattern: '', width: "1", rules: { required: false } },
        { name: 'type_other', label: 'Dachtyp Sonstiges', type: 'text', pattern: '', width: "1", rules: { required: false } },
        { name: 'type_other', label: 'Dachtyp Sonstiges', type: 'text', pattern: '', width: "1", rules: { required: false } },
        { name: 'roofing_type_id', label: 'Dacheindeckung', type: 'select', options: roofing_types, pattern: '', width: "1", rules: { required: true } },
        { name: 'age_range_id', label: 'Dachalter', type: 'select', options: age_ranges, pattern: '', width: "1", rules: { required: false } },
        { name: 'orientation_id', label: 'Ausrichtung', type: 'select', options: compass_directions, width: "1", rules: { required: false } },
        { name: 'shading_type_id', label: 'Verschattung', type: 'select', options: shading_types, width: "1", rules: { required: false } },
        { name: 'tiles_fixing_type_id', label: 'Befestigung der Ziegel', type: 'select', options: fixing_types, width: "1", rules: { required: false } },
        { name: 'tiles_visible_size', label: 'Sichtbares Ziegelmaß BxH (je 0-50 cm)', type: 'text', width: "1", rules: { required: false } },
        { name: 'module_area', label: 'Module Bereiche', type: 'text', width: "1", rules: { required: false } },
        { name: 'module_fields_count', label: 'Modulfelder', type: 'text', width: "1", rules: { required: false } },
        { name: 'renovated_at', label: 'Jahr der Sanierung (optional)', type: 'date', width: "1", rules: { required: false } },
        { name: 'insulation_type_id', label: 'Art der Dämmung', type: 'select', options: insulationTypes, width: "1", rules: { required: false } },
        { name: 'rafter_insulation_thickness', label: 'Stärke Aufsparrendämmung', ttype: 'text', width: "1", rules: { required: false } },
        { name: 'rafter_width', label: 'Sparrenbreite', type: 'text', width: "1", rules: { required: false } },
        { name: 'comment', label: 'Kommentar', type: 'textarea', rows: 3, width: "2", rules: { required: false } },
    ]
}

export const ROOF_SIZE = () => {
    return [
        { name: 'width', label: 'Breite (Hauptdach)', type: 'text', width: "1", rules: { required: false } },
        { name: 'width_alt', label: 'Breite (2te Seite)', type: 'text', width: "1", rules: { required: false } },
        { name: 'length', label: 'Länge', type: 'number', width: "1", rules: { required: false } },
        { name: 'length_alt', label: 'Länge (2te Seite)', type: 'text', width: "1", rules: { required: false } },
        { name: 'eaves_height', label: 'Traufhöhe', type: 'text', width: "1", rules: { required: false } },
        { name: 'eaves_height_alt', label: 'Traufhöhe (2te Seite)', type: 'text', width: "1", rules: { required: false } },
        { name: 'ridge_height', label: 'Firsthöhe', type: 'text', width: "1", rules: { required: false } },
        { name: 'ridge_height_alt', label: 'Firsthöhe (2te Seite)', type: 'text', width: "1", rules: { required: false } },
        { name: 'pitch', label: 'Dachneigung', type: 'text', width: "1", rules: { required: false } },
    ]
}

export const SOLARCONFIG_PRODUCT = () => {
    return [
        { name: 'modules_count', label: 'Anzahl Module', type: 'text', width: "1", rules: { required: true } },
        { name: 'module_variant_id', label: 'Modulvariante (Optional)', type: 'select', options: module_variant, width: "1", rules: { required: false } },
        { name: 'is_cloud', label: 'Cloud', type: 'checkbox', width: "1", rules: { required: false } },
        { name: 'modules_crosswise', label: 'Querverlegung', type: 'checkbox', width: "1", rules: { required: false } },
        { name: 'backup_power_capability_id', label: 'Notstromfähigkeit', type: 'checkbox', width: "1", rules: { required: false } },

    ]
}

export const SOLARCONFIG_PRODUCTS = (panels, storages) => {
    return [
        { name: 'module_type_id', label: 'Modultyp', type: 'select', options: panels, width: "1", rules: { required: true } },
        { name: 'storage_type_id', label: 'Speicher', type: 'select', options: storages, width: "1", rules: { required: false } },
    ]
}

export const SOLARCONFIG_CONFIGURATION = () => {
    return [
        { name: 'emobile_charging_capacity', label: 'Ladeleistung E-Mobil in kW', type: 'select', options: emobile_charging_capacity, width: "1", rules: { required: false } },
        { name: 'meter_box_renewal', label: 'Stromkasten erneuern', type: 'checkbox', width: "1", rules: { required: false } },
        { name: 'storage_can_substitute_power_supply', label: 'Substitute', type: 'checkbox', width: "1", rules: { required: false } },
        { name: 'is_meter_consolidation_desired', label: 'Zählerzusammenlegung', type: 'checkbox', width: "1", rules: { required: false } },
        { name: 'has_lan_connectivity', label: 'LAN-Verbindung (Router-Zählerschrank)', type: 'checkbox', width: "1", rules: { required: false } },
        { name: 'boardBinder', label: 'Dach-/Brettbinder (< 5 cm Dicke)', type: 'checkbox', width: "1", rules: { required: false } },
        { name: 'boardBinderOther', label: 'Dachbinder (Sonstiges)', type: 'text', width: "1", rules: { required: false } },
        { name: 'meter_replacement_costs', label: 'Zählerkostenerneuerung in Euro', type: 'text', width: "1", rules: { required: false } },
    ]
}

export const CONSUMPTION = () => {
    return [
        { name: 'electricity_consumption', label: 'Jahresstromverbrauch', type: 'text', width: "1", rules: { required: false } },
        { name: 'special_consumption', label: 'Besonderer Verbraucher', type: 'text', width: "1", rules: { required: false } },
    ]
}

export const INSTALLATION = () => {
    return [
        { name: 'meter_box_to_junction_box_distance', label: 'Abstand HAK -> ZK ', type: 'text', width: "1", rules: { required: false } },
        { name: 'has_equipotential_bonding_rail', label: 'Potenzialausgleichsschiene', type: 'checkbox', width: "1", rules: { required: false } },
    ]
}

export const BUILDING_OTHERS = () => {
    return [
        { name: 'remaining_consumption_tariff_id', label: 'Reststrom-Tarif', type: 'text', width: "1", rules: { required: false } },
        { name: 'electricity_price_increase', label: 'Strompreissteigerung (0 - 8 %)', type: 'text', width: "1", rules: { required: false } },
        { name: 'remaining_consumption_base_price', label: 'Reststrom-Grundpreis in Euro/Monat', type: 'text', width: "1", rules: { required: false } },
        { name: 'remaining_consumption_unit_price', label: 'Reststrom-Arbeitspreis in ct/kWh', type: 'text', width: "1", rules: { required: false } },
    ]
}


const priorities = [
    { value: 1, label: 'Niedrig' },
    { value: 2, label: 'Mittel' },
    { value: 3, label: 'Hoch' },
    { value: 4, label: 'Dringend' },
]

export const ADDTASK = (users) => {
    return [
        { name: 'title', label: 'Betreff', type: 'text', pattern: '', width: "2", rules: { required: true } },
        { name: 'description', label: 'Beschreibung', rows: 5, type: 'textarea', pattern: '', width: "2", rules: { required: true } },
        { name: 'priority', label: 'Priorität', options: priorities, type: 'select', pattern: '', width: "2", rules: { required: true } },
        { name: 'assignedTo', label: 'Zugewiesen an', type: 'select', options: users, pattern: '', width: "2", rules: { required: true } },
    ]
}
